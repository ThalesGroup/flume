# This file contains all available configuration options
# with their default values.

# all available settings of specific linters
linters-settings:
  govet:
    # report about shadowed variables
    disable:
      - shadow

  paralleltest:
    ignore-missing: true

  wrapcheck:
    # ignoreInterfaceRegexps:
    #   - 
    ignorePackageGlobs:
      - github.com/ansel1/merry/*
      - log/slog*

  exhaustive:
    default-signifies-exhaustive: true

  inamedparam:
    skip-single-param: true

  ireturn:
    allow:
      - anon
      - empty
      - stdlib
      - error
      - flume\/v2\.Middleware$
  
linters:
  # to try out individual linters: golangci-lint run -E gocyclo,gosimple
  enable-all: true
  disable:
    - typecheck          # redundant?  compiler does this
    - funlen             # don't care
    - varnamelen         # don't care
    - cyclop             # interesting to look for potential refactoring, but not appropriate as a gating linter
    - gocyclo            # interesting to look for potential refactoring, but not appropriate as a gating linter
    - exhaustruct        # why?
    - testpackage        # don't want
    - gochecknoglobals   # too noisy.  lots unexported vars are really consts, but have values which don't allow `const`
    - thelper            # tests use lots of anon functions, not sure they should all be marked as helpers
    - wsl
    - gofumpt
    - lll
    - depguard
    - nlreturn           # kind of like this one, with a block size of 2, but can't get it to work right
    - godot              # consider turning this back on when I'm ready to policy the comments
    - mnd
    - godox

issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  exclude:
  - Error return value of .(.*\.Write). is not checked
  # we use merry errors a lot, and goerr113 doesn't recognize it as a valid sentinel error
  - use wrapped static errors instead

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - errcheck
        - dupl
        - gosec
        - scopelint
        - gochecknoinits
        - gochecknoglobals
        - goconst
        - forcetypeassert
    - path: cmd
      linters:
        # init() functions are pretty common in main packages
        - gochecknoinits
        - gochecknoglobals
    # exclude requiring comments on all exported stuff
    - linters:
        - revive
      text: "exported:"
